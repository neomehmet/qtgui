from PyQt5 import QtWidgets
from can import Ui_MainWindow
from PyQt5.QtWidgets import QFileDialog
import pandas as pd

class mw(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self):
        super(mw, self).__init__()
        self.setupUi(self)
        tabs = self.tabWidget
        tabs.tabCloseRequested.connect(self.closeTab)
        self.pushButton_select_dbc.clicked.connect(self.openExplorer)

    def get_file_name_and_path_as_str(self, path):
        path = "".join(path)
        file_name = path.split("/")[-1]
        file_name = file_name.replace("(*.xlsx)", "")
        # print("\n iste file -->", file_name, "<--", file_name)
        path = path.replace("(*.xlsx)", "")
        # print("\n iste path -->", path, "<--")
        return file_name, path

    def openExplorer(self):
        try:
            dialog = QFileDialog()
            dialog.setViewMode(QFileDialog.Detail)  # Set view mode to Detail
            dialog.setNameFilter(("dbc excell (*.xlxs)"))
            path = dialog.getOpenFileName(None, "Open File", "", "(*.xlsx)")
            file_name, path = self.get_file_name_and_path_as_str(path)
            df = self.open_excel_dbc_as_pandas_frame(path)
            self.set_comboboxes_from_dbc(df)
            print(path, file_name)

        except Exception as e:
            print(e)

    def closeTab(self, index):
        tabs = self.tabWidget
        tabs.removeTab(index)

    def open_excel_dbc_as_pandas_frame(self, file_path):
        try:
            df = pd.read_excel(file_path, sheet_name="Diag_CAN Signals")
            #print(df["Message Name"]) #this line for debug
            return df
        except Exception as e:
            print("hata :", e)

    def set_comboboxes_from_dbc(self, df):
        self.comboBox_1_mes_name.addItems(set(df["Message Name"]))
        length_combo = self.get_max_length_of_signal_name(set(df["Message Name"]))
        #self.gridLayout.setColumnMinimumWidth(0, length_combo*10)
        self.comboBox_1_mes_name.resize(self.comboBox_1_mes_name.maximumSizeHint())
        
    """    
        self.comboBox_2_description.addItems(set(df["Description"]))
        length_combo = self.get_max_length_of_signal_name(set(df["Description"]))
        self.gridLayout.setColumnMinimumWidth(1, length_combo*10)
        """
    def get_max_length_of_signal_name(self, df):
        max_width = 0
        for i in range(self.comboBox_1_mes_name):
            max_width = max(max_width, self.comboBox_1_mes_name.itemSize(i).width())
        """max_length = 0
        for i in df:
            if len(i) > max_length:
                max_length = len(i)
        return max_length"""

"""        max_length = 0
        for i in df["Signal Name"]:
            if len(i) > max_length:
                max_length = len(i)
        return max_length"""

app = QtWidgets.QApplication([])
window = mw()
window.show()
app.exec_()
